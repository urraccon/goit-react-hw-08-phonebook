{"version":3,"file":"static/js/407.700ac54d.chunk.js","mappings":"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","sources":["components/pages/signup/SignupPage.styles.jsx","components/pages/signup/components/signup_form/SignupForm.styles.jsx","components/pages/signup/components/signup_form/SignupForm.jsx","components/pages/signup/SignupPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  height: inherit;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    align-items: center;\n  }\n\n  @media screen and (max-width: 767px) {\n    overflow: auto;\n  }\n`;\n\nexport const PaperStyling = {\n  height: 'fit-content',\n  margin: '15px',\n  backgroundColor: '#fae5d6',\n  border: '3px solid #d89c92',\n  borderRadius: '30px',\n};\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: 400px;\n  padding: 50px;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    padding: 20px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 48px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const Fields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n","import { Button, Link, TextField, Typography } from '@mui/material';\nimport { ButtonContainer, Fields, Form } from './SignupForm.styles';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport Validation from 'components/common/services/Validation';\nimport { useDispatch } from 'react-redux';\nimport { userSignup } from 'components/redux/auth/operations';\nimport { useMediaQuery } from 'react-responsive';\n\nconst SignupForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nameErr, setNameErr] = useState(null);\n  const [emailErr, setEmailErr] = useState(null);\n  const [passwordErr, setPasswordErr] = useState(null);\n  const dispatch = useDispatch();\n  const mobile = useMediaQuery({\n    maxWidth: 767,\n  });\n\n  function handleSignupSubmit(evt) {\n    evt.preventDefault();\n    const nameValue = evt.target[0].value;\n    const emailValue = evt.target[2].value;\n    const passwordValue = evt.target[4].value;\n    const isNameInvalid = Validation.checkName(nameValue);\n    const isEmailInvalid = Validation.checkEmail(emailValue);\n    const isPasswordInvalid = Validation.checkPassword(passwordValue, 'signup');\n    setNameErr(isNameInvalid);\n    setEmailErr(isEmailInvalid);\n    setPasswordErr(isPasswordInvalid);\n    if (!isNameInvalid && !isEmailInvalid && !isPasswordInvalid) {\n      const signupData = {\n        name,\n        email,\n        password,\n      };\n      dispatch(userSignup(signupData));\n    }\n  }\n\n  return (\n    <Form onSubmit={handleSignupSubmit}>\n      <Fields>\n        <TextField\n          error={nameErr ? true : false}\n          type=\"text\"\n          id=\"name\"\n          label=\"Name\"\n          helperText={nameErr ? nameErr : 'Please enter the name'}\n          size=\"small\"\n          color=\"warning\"\n          onChange={evt => setName(evt.target.value)}\n          value={name}\n          sx={{\n            minWidth: `${!mobile && '28ch'}`,\n          }}\n        />\n        <TextField\n          error={emailErr ? true : false}\n          type=\"text\"\n          id=\"email\"\n          label=\"Email address\"\n          helperText={emailErr ? emailErr : 'Please enter the email address'}\n          size=\"small\"\n          color=\"warning\"\n          onChange={evt => setEmail(evt.target.value)}\n          value={email}\n        />\n        <TextField\n          error={passwordErr ? true : false}\n          type=\"password\"\n          id=\"password\"\n          label=\"Password\"\n          helperText={passwordErr ? passwordErr : 'Please enter the password'}\n          size=\"small\"\n          color=\"warning\"\n          onChange={evt => setPassword(evt.target.value)}\n          value={password}\n        />\n      </Fields>\n      <ButtonContainer>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"warning\"\n          sx={{\n            fontWeight: 900,\n          }}\n        >\n          Create account\n        </Button>\n        <Typography\n          variant=\"overline\"\n          ml={2}\n          sx={{\n            fontSize: 8,\n            textAlign: 'left',\n          }}\n        >\n          If you have an account\n          <Link\n            underline=\"hover\"\n            component={NavLink}\n            to=\"/login\"\n            ml={0.4}\n            sx={{\n              fontWeight: 700,\n              color: '#ed6c02',\n            }}\n          >\n            Log in\n          </Link>\n        </Typography>\n      </ButtonContainer>\n    </Form>\n  );\n};\n\nexport default SignupForm;\n","import { Paper, Typography } from '@mui/material';\nimport { Container, Content, Header, PaperStyling } from './SignupPage.styles';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  alertMessage,\n  selectOperation,\n  selectStatus,\n} from 'components/redux/auth/selectors';\nimport { Loader } from 'components/common/components/Loader';\nimport { useNavigate } from 'react-router-dom';\nimport Alerts from 'components/common/components/Alerts';\nimport SignupForm from './components/signup_form/SignupForm';\nimport { clearLastStatus } from 'components/redux/auth/authSlice';\n\nconst SignupPage = () => {\n  const status = useSelector(selectStatus);\n  const alert = useSelector(alertMessage);\n  const operation = useSelector(selectOperation);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (status === 'succeeded' && operation === 'login') {\n      setTimeout(() => {\n        navigate('/contacts');\n        dispatch(clearLastStatus());\n      }, 1000);\n    }\n    if (operation === 'logout') {\n      dispatch(clearLastStatus());\n    }\n  }, [status, operation, navigate, dispatch]);\n\n  return (\n    <>\n      {status === 'loading' && <Loader />}\n      {status === 'succeeded' && <Alerts type=\"success\" message={alert} />}\n      {status === 'failed' && <Alerts type=\"error\" message={alert} />}\n      <Container>\n        <Paper elevation={6} sx={PaperStyling}>\n          <Content>\n            <Header>\n              <Typography variant=\"h4\">\n                The simplest app to manage your contacts\n              </Typography>\n              <Typography variant=\"h6\" sx={{ fontWeight: 400 }}>\n                Set a name, an email address and a password to creat an account\n              </Typography>\n            </Header>\n            <SignupForm />\n          </Content>\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nexport default SignupPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","PaperStyling","height","margin","backgroundColor","border","borderRadius","Content","_templateObject2","Header","_templateObject3","Form","Fields","ButtonContainer","SignupForm","name","setName","useState","email","setEmail","password","setPassword","nameErr","setNameErr","emailErr","setEmailErr","passwordErr","setPasswordErr","dispatch","useDispatch","mobile","useMediaQuery","maxWidth","_jsxs","onSubmit","evt","preventDefault","nameValue","target","value","emailValue","passwordValue","isNameInvalid","Validation","isEmailInvalid","isPasswordInvalid","signupData","userSignup","children","_jsx","TextField","error","type","id","label","helperText","size","color","onChange","sx","minWidth","concat","Button","variant","fontWeight","Typography","ml","fontSize","textAlign","Link","underline","component","NavLink","to","SignupPage","status","useSelector","selectStatus","alert","alertMessage","operation","selectOperation","navigate","useNavigate","useEffect","setTimeout","clearLastStatus","_Fragment","Loader","Alerts","message","Paper","elevation"],"sourceRoot":""}