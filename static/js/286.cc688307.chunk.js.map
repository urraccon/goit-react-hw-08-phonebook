{"version":3,"file":"static/js/286.cc688307.chunk.js","mappings":"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","sources":["components/redux/contacts/selectors.js","components/pages/contacts/components/contact_form/ContactForm.styles.jsx","components/pages/contacts/components/contact_form/ContactForm.jsx","components/pages/contacts/components/Filter.jsx","components/pages/contacts/components/contact_list/ContactList.styles.jsx","components/pages/contacts/components/contact_list/ContactList.jsx","components/pages/contacts/ContactsPage.styles.jsx","components/common/components/sections/Sections.styles.jsx","components/common/components/sections/Sections.jsx","components/common/components/nav_bar/NavBar.styles.jsx","components/common/components/nav_bar/NavBar.jsx","components/pages/contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport AlertMessages from 'components/common/services/AlertMessages';\n\nexport const selectTerm = state => state.contactsFilter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectStatus = state => state.contacts.status;\nexport const selectError = state => state.contacts.error;\nexport const selectOperation = state => state.contacts.operation;\n\nexport const filteredContacts = createSelector(\n  [selectTerm, selectContacts],\n  (term, contacts) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(term.toLowerCase())\n    )\n);\n\nexport const alertMessage = createSelector(\n  [selectStatus, selectOperation, selectError],\n  (status, operation, error) => {\n    switch (operation) {\n      case 'loadData':\n        return AlertMessages.loadData(status);\n      case 'addContact':\n        return AlertMessages.addContact(status);\n      case 'deleteContact':\n        return AlertMessages.deleteContact(status);\n      case 'duplicateContact':\n        return error;\n      default:\n        return null;\n    }\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: fit-content;\n`;\n\nexport const Fields = styled.div`\n  display: flex;\n  width: fit-content;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nimport { addContact } from 'components/redux/contacts/operations';\nimport { Container, Fields, Form } from './ContactForm.styles';\nimport { Button, TextField } from '@mui/material';\nimport Validation from 'components/common/services/Validation';\nimport { setRejectedStatus } from 'components/redux/contacts/slices/contactsSlice';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [nameErr, setNameErr] = useState(null);\n  const [phoneErr, setPhoneErr] = useState(null);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n    const isNameInvalid = Validation.checkName(name);\n    const isPhoneInvalid = Validation.checkPhone(phone);\n    const isContactDuplicated = Validation.checkContact(contacts, name);\n    setNameErr(isNameInvalid);\n    setPhoneErr(isPhoneInvalid);\n    if (isContactDuplicated) {\n      const rejectedStatus = {\n        error: isContactDuplicated,\n        operation: 'duplicateContact',\n      };\n      dispatch(setRejectedStatus(rejectedStatus));\n    }\n    if (!isNameInvalid && !isPhoneInvalid && !isContactDuplicated) {\n      const contact = {\n        name,\n        number: phone,\n      };\n      dispatch(addContact(contact));\n      setName('');\n      setPhone('');\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={formSubmit}>\n        <Fields>\n          <TextField\n            error={nameErr ? true : false}\n            type=\"text\"\n            id=\"name\"\n            label=\"Name\"\n            helperText={nameErr ? nameErr : \"Please enter the contact's name\"}\n            size=\"small\"\n            color=\"warning\"\n            value={name}\n            onChange={evt => setName(evt.target.value)}\n            sx={{\n              minWidth: '28ch',\n            }}\n          />\n          <TextField\n            error={phoneErr ? true : false}\n            type=\"tel\"\n            id=\"phone\"\n            label=\"Phone\"\n            helperText={\n              phoneErr ? phoneErr : \"Please enter the contact's phone\"\n            }\n            size=\"small\"\n            color=\"warning\"\n            value={phone}\n            onChange={evt => setPhone(evt.target.value)}\n            sx={{\n              width: '100%',\n            }}\n          />\n        </Fields>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"warning\"\n          sx={{\n            fontWeight: 900,\n            width: '100%',\n          }}\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'components/redux/contacts/slices/contactsFilterSlice';\nimport { selectTerm } from 'components/redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const term = useSelector(selectTerm);\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      type=\"search\"\n      id=\"serach-bar\"\n      label=\"Search contacts by name\"\n      helperText=\"Enter a letter to start searching\"\n      size=\"small\"\n      color=\"warning\"\n      value={term}\n      onChange={evt => dispatch(setFilter(evt.target.value))}\n      sx={{\n        minWidth: '28ch',\n      }}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n@ media screen and (min-width: 1024px) {\n  max-height: 160px;\n}\n  \n  width: 85%;\n  }\n`;\n\nexport const Scrollbar = styled.div`\n  height: 100%;\n\n  @media screen and (min-width: 1024px) {\n    overflow: auto;\n\n    &::-webkit-scrollbar {\n      width: 4px;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: white;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: rgb(237, 108, 2);\n    }\n\n    &::-webkit-scrollbar-thumb:hover {\n      background: rgb(230, 81, 0);\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts } from 'components/redux/contacts/selectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'components/redux/contacts/operations';\nimport { useEffect } from 'react';\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport StarIcon from '@mui/icons-material/Star';\nimport { Container, Scrollbar } from './ContactList.styles';\nimport { selectUserToken } from 'components/redux/auth/selectors';\nimport Config from 'components/common/Config';\n\nexport const ContactList = () => {\n  const contacts = useSelector(filteredContacts);\n  const accessToken = useSelector(selectUserToken);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (accessToken) {\n      Config.setRequestURL(accessToken);\n    }\n  }, [accessToken]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Scrollbar>\n        <List\n          aria-label=\"contacts\"\n          disablePadding\n          sx={{\n            marginRight: '10px',\n          }}\n        >\n          {contacts.map(contact => (\n            <div key={contact.id}>\n              <ListItem\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => dispatch(deleteContact(contact.id))}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemIcon>\n                  <StarIcon\n                    sx={{\n                      fill: '#d89c92',\n                    }}\n                  />\n                </ListItemIcon>\n                <ListItemText primary={contact.name} />\n                <ListItemText secondary={contact.number} />\n              </ListItem>\n              {contacts.length - 1 !== contacts.indexOf(contact) && <Divider />}\n            </div>\n          ))}\n        </List>\n      </Scrollbar>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: inherit;\n\n  @media screen and (min-width: 1024px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  @media screen and (max-width: 1024px) {\n    overflow: auto;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaperStyling = {\n  backgroundColor: '#fae5d6',\n  border: '3px solid #d89c92',\n  borderRadius: '30px',\n};\n\nexport const PaperContent = styled.div`\n  @media screen and (min-width: 1024px) {\n    display: flex;\n    height: 400px;\n  }\n`;\n\nexport const Contacts = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  min-width: 400px;\n  min-height: 300px;\n  padding: 50px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  justify-content: center;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n","import PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { Content, Header, Section } from './Sections.styles';\n\nexport const Sections = ({ name, descr, children }) => {\n  return (\n    <Section>\n      <Content>\n        <Header>\n          <Typography variant=\"h5\" ml={1.5}>\n            {name}\n          </Typography>\n          <Typography varaian=\"h6\">{descr}</Typography>\n        </Header>\n        {children}\n      </Content>\n    </Section>\n  );\n};\n\nSections.propTypes = {\n  name: PropTypes.string,\n  descr: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  background-color: #d09f94;\n  height: 40px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px,\n    rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;\n`;\n\nexport const Content = styled.div`\n  height: inherit;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  margin-right: 80px;\n  gap: 20px;\n`;\n","import { Divider, IconButton, Typography } from '@mui/material';\nimport { Container, Content } from './NavBar.styles';\nimport { Logout } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userLogout } from 'components/redux/auth/operations';\nimport { selectUsername } from 'components/redux/auth/selectors';\n\nconst NavBar = () => {\n  const username = useSelector(selectUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Content>\n        <Typography variant=\"button\">{username}</Typography>\n        <Divider orientation=\"vertical\" />\n        <IconButton\n          sx={{\n            padding: 0,\n          }}\n          onClick={() => dispatch(userLogout())}\n        >\n          <Logout\n            sx={{\n              fill: 'white',\n            }}\n          />\n        </IconButton>\n      </Content>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import {\n  alertMessage,\n  selectStatus,\n} from 'components/redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport ContactForm from './components/contact_form/ContactForm';\nimport { Filter } from './components/Filter';\nimport { ContactList } from './components/contact_list/ContactList';\nimport { Loader } from 'components/common/components/Loader';\nimport {\n  Contacts,\n  Container,\n  Content,\n  PaperContent,\n  PaperStyling,\n} from './ContactsPage.styles';\nimport { useEffect } from 'react';\nimport { Divider, Paper } from '@mui/material';\nimport { selectIsLoggedIn } from 'components/redux/auth/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport Alerts from 'components/common/components/Alerts';\nimport { Sections } from 'components/common/components/sections/Sections';\nimport NavBar from 'components/common/components/nav_bar/NavBar';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ContactsPage = () => {\n  const status = useSelector(selectStatus);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const alert = useSelector(alertMessage);\n  const navigate = useNavigate();\n  const tablet = useMediaQuery({\n    maxWidth: 1023,\n  });\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <>\n      {status === 'loading' && <Loader />}\n      {status === 'succeeded' && <Alerts type=\"success\" message={alert} />}\n      {status === 'failed' && <Alerts type=\"error\" message={alert} />}\n      <NavBar />\n      <Container>\n        <Content>\n          <Paper\n            elevation={6}\n            sx={{\n              ...PaperStyling,\n              margin: `${tablet ? '90px 0 50px' : null}`,\n            }}\n          >\n            <PaperContent>\n              <Sections\n                name=\"Create contact\"\n                descr=\"Do you have a new contact? Add it\"\n              >\n                <ContactForm />\n              </Sections>\n              <Divider\n                variant=\"fullwidth\"\n                orientation={`${tablet ? 'horizontal' : 'vertical'}`}\n              />\n              <Sections\n                name=\"Contacts\"\n                descr=\"Looking for a contact? Use the search bar\"\n              >\n                <Contacts>\n                  <Filter />\n                  <ContactList />\n                </Contacts>\n              </Sections>\n            </PaperContent>\n          </Paper>\n        </Content>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectTerm","state","contactsFilter","selectContacts","contacts","items","selectStatus","status","filteredContacts","createSelector","term","filter","contact","name","toLowerCase","includes","alertMessage","operation","error","AlertMessages","Form","styled","_templateObject","_taggedTemplateLiteral","Fields","_templateObject2","Container","_templateObject3","ContactForm","setName","useState","phone","setPhone","nameErr","setNameErr","phoneErr","setPhoneErr","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","onSubmit","evt","preventDefault","isNameInvalid","Validation","isPhoneInvalid","isContactDuplicated","rejectedStatus","setRejectedStatus","number","addContact","TextField","type","id","label","helperText","size","color","value","onChange","target","sx","minWidth","width","Button","variant","fontWeight","Filter","setFilter","Scrollbar","ContactList","accessToken","selectUserToken","useEffect","Config","fetchContacts","List","disablePadding","marginRight","map","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","DeleteIcon","ListItemIcon","StarIcon","fill","ListItemText","primary","secondary","length","indexOf","Divider","Content","PaperStyling","backgroundColor","border","borderRadius","PaperContent","Contacts","_templateObject4","Section","Header","Sections","_ref","descr","Typography","ml","varaian","NavBar","username","selectUsername","orientation","padding","userLogout","Logout","ContactsPage","isLoggedIn","selectIsLoggedIn","alert","navigate","useNavigate","tablet","useMediaQuery","maxWidth","_Fragment","Loader","Alerts","message","Paper","elevation","margin","concat"],"sourceRoot":""}